# Copyright 2010 - 2013, Qualcomm Innovation Center, Inc.
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 

import os
import sys
sys.path.append('../../build_core/tools/scons')
from javastatus import JavaStatus
Import('env')

# AllJoyn Java status codes
JavaStatus('org/alljoyn/bus/Status')


# AllJoyn Java binding
if env['OS'] == 'android':
    # Get P2P java files from core
    main_classes = env.Java('$CLASSDIR', source = ['.'], JAVACLASSPATH = env.subst('$JAVACLASSPATH'))

    if env['OS'] == 'android' and env['ANDROID_PROXIMITY'] == 'on':
        if env.get('ANDROID_SDK', '') == '':
            print 'ANDROID_SDK must be set when building ICE=on.'
            if not GetOption('help'):
                Exit()

        env.AppendENVPath("JAVACLASSPATH", env.subst('$ANDROID_SDK/platforms/android-$ANDROID_API_LEVEL/android.jar'))
        main_classes += env.Java('$CLASSDIR', source = ['../helper'], JAVACLASSPATH = env.subst('$JAVACLASSPATH'))

    alljoyn_jar = env.Jar('$JARDIR/alljoyn.jar', source = [main_classes])

elif (env['OS'] == 'linux' or env['OS_GROUP'] == 'windows'):
    main_classes = env.Java('$CLASSDIR', source = ['.'], JAVACLASSPATH = env.subst('$JAVACLASSPATH'))
    alljoyn_jar = env.Jar('$JARDIR/alljoyn.jar', source = [main_classes])

if env['VARIANT'] == 'debug' :
    # get a listing of the sources
    env.Jar('$JARDIR/alljoyn-sources.jar', source = ['.'])
Return('alljoyn_jar')


	
	



